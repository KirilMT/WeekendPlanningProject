# Weekend Planning Project - Docker Compose Configuration
version: '3.8'

services:
  weekend-planning-app:
    build: .
    container_name: weekend-planning-app
    ports:
      - "5000:5000"
    environment:
      - SECRET_KEY=${SECRET_KEY:-your_secret_key_here}
      - FLASK_DEBUG=${FLASK_DEBUG:-0}
      - DATABASE_FILENAME=${DATABASE_FILENAME:-weekend_planning.db}
      - CSRF_TIME_LIMIT=${CSRF_TIME_LIMIT:-3600}
      - SESSION_LIFETIME=${SESSION_LIFETIME:-1800}
      - MAX_UPLOAD_SIZE=${MAX_UPLOAD_SIZE:-16777216}
    volumes:
      # Persist database and logs
      - weekend_data:/app/wkndPlanning
      # Mount uploads directory for file persistence
      - weekend_uploads:/app/wkndPlanning/uploads
      # Mount output directory
      - weekend_output:/app/wkndPlanning/output
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - weekend-network

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: weekend-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - weekend-planning-app
    restart: unless-stopped
    networks:
      - weekend-network
    profiles:
      - production

volumes:
  weekend_data:
    driver: local
  weekend_uploads:
    driver: local
  weekend_output:
    driver: local

networks:
  weekend-network:
    driver: bridge

# Development override - uncomment for development
# To use: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up
---
version: '3.8'
services:
  weekend-planning-app:
    environment:
      - FLASK_DEBUG=1
      - DATABASE_FILENAME=testsDB.db
    volumes:
      # Mount source code for live reloading in development
      - .:/app
    command: ["python", "run.py"]
    profiles:
      - development
